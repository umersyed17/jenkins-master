.jenkins-button {
  --item-background--hover: var(--button-background--hover);
  --item-background--active: var(--button-background--active);
  --item-box-shadow--focus: var(--button-box-shadow--focus);

  .item();

  appearance: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  outline: none;
  margin: 0;
  padding: 0.5rem 0.85rem;
  font-size: 0.8rem;
  font-weight: 500;
  text-decoration: none !important;
  background: transparent;
  color: var(--text-color) !important;
  border-radius: 0.66rem;
  cursor: pointer;
  min-height: 36px;
  white-space: nowrap;
  gap: 1ch;

  &::before {
    background: var(--button-background);
  }

  svg {
    width: 1.1rem;
    height: 1.1rem;
  }

  &:disabled {
    pointer-events: none;
    opacity: 0.5;
    filter: saturate(0.6);
  }
}

.jenkins-button--primary {
  color: var(--button-color--primary) !important;
  font-weight: 600;

  &::before {
    background: var(--primary) !important;
  }

  &::after {
    box-shadow: 0 0 0 0.66rem var(--primary);
    opacity: 0;
  }

  &:hover {
    &::before {
      opacity: 0.9;
    }
  }

  &:active,
  &:focus {
    &::before {
      opacity: 0.8;
    }

    &::after {
      box-shadow: 0 0 0 0.33rem var(--primary);
      opacity: 0.2;
    }
  }
}

.jenkins-button--tertiary {
  &::before {
    background: transparent;
  }
}

// Support for custom colors
// Modifier classes must include 'color' in name to work
.jenkins-button[class*="color"] {
  background: transparent;
  color: var(--color) !important;

  &::before {
    background: currentColor !important;
    opacity: 0.1;
  }

  &::after {
    box-shadow: 0 0 0 0.66rem currentColor;
    opacity: 0;
  }

  &:hover {
    &::before {
      opacity: 0.15;
    }
  }

  &:active,
  &:focus {
    &::before {
      opacity: 0.2;
    }

    &::after {
      box-shadow: 0 0 0 0.33rem currentColor;
      opacity: 0.1;
    }
  }
}

.jenkins-button--primary[class*="color"] {
  background: transparent;
  color: var(--background) !important;

  &::before {
    background: var(--color) !important;
    opacity: 1;
  }

  &::after {
    box-shadow: 0 0 0 0.66rem var(--color);
    opacity: 0;
  }

  &:hover {
    &::before {
      opacity: 0.9;
    }
  }

  &:active,
  &:focus {
    &::before {
      opacity: 0.8;
    }

    &::after {
      box-shadow: 0 0 0 0.33rem var(--color);
      opacity: 0.3;
    }
  }
}

.jenkins-button--tertiary[class*="color"] {
  &::before {
    opacity: 0;
  }
}

// Additional button related classes
.jenkins-buttons-row {
  display: flex;
  align-items: center;
  gap: 1rem;

  &--invert {
    justify-content: flex-end;
  }

  &--equal-width {
    .jenkins-button {
      min-width: 5.625rem;
    }
  }

  &--equal-width {
    min-width: 5.625rem;
  }
}

.jenkins-copy-button {
  .jenkins-copy-button__icon {
    position: relative;
    width: 0.9rem;
    height: 1.125rem;
    transition: var(--standard-transition);

    &::before,
    &::after {
      content: "";
      position: absolute;
      width: 75%;
      height: 75%;
      border: 0.1rem solid currentColor;
      border-radius: 0.2rem;
      transition: var(--standard-transition);
    }

    &::before {
      top: 4%;
      left: 1%;
      clip-path: polygon(
        100% 0,
        100% 22.5%,
        22.5% 22.5%,
        32.5% 100%,
        0 100%,
        0 0
      );
    }

    &::after {
      bottom: 4%;
      right: 1%;
    }
  }

  &:hover {
    .jenkins-copy-button__icon {
      &::before {
        transform: translate(7%, 4.5%);
      }

      &::after {
        transform: translate(-7%, -4.5%);
      }
    }
  }

  &:active {
    .jenkins-copy-button__icon {
      transform: scale(0.85);
    }
  }
}

.jenkins-validate-button__container {
  &__status {
    .validation-error-area {
      min-height: 36px !important;
    }
  }

  .validation-error-area--visible {
    margin-top: 0;
    margin-bottom: 0.625rem;
  }

  & > .jenkins-button {
    float: right;
  }
}

.advanced-button {
  svg {
    width: 0.875rem;
    height: 0.875rem;
    transition: var(--standard-transition);
  }

  &:not([data-expanded="true"]) {
    &:active {
      svg {
        translate: 0 0.125rem;
      }
    }
  }

  &[data-expanded="true"] {
    svg {
      rotate: 180deg;
    }
  }
}
